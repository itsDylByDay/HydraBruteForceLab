# In-Depth Notes for Hydra SSH Brute-Force Lab (Kali/Windows)

**Author**: Dylan Alexander Schreibfeder  
*March 2025*

---

## Lab Setup Details
- **Network Configuration**: Used VirtualBox’s “Internal Network” to isolate Kali (`192.168.20.11`) and Windows (`192.168.20.10`). Resolved initial IP conflicts by editing `/etc/network/interfaces` on Kali and IPv4 settings on Windows, ensuring `192.168.20.0/24` uniqueness.
- **SSH Installation**: Installed OpenSSH Server on Windows via `Settings > Apps > Optional Features` (online method). Started via `services.msc`; no firewall adjustments were needed for pings after enabling ICMP, but SSH traffic worked by default on port 22.
- **Troubleshooting**: Faced “no route to host” for SSH—fixed by verifying Internal Network settings and rebooting VMs.

## SSH Enumeration Insights
- **Nmap Commands**: `nmap -p 22 192.168.20.10` confirmed `22/tcp open ssh`. Explored `nmap -p 22 192.168.20.0/24` to scan the full network, discovering all SSH-enabled devices—useful for SOC reconnaissance without a known IP.
- **Technical Note**: `-p 22` isolates SSH scanning, with 'p' representing the port on which SSH is hosted.

## Wordlist Creation Exploration
- **Methodology**: `echo -e "admin\npassword\nroot\ntest123" > wordlist.txt` created a simple list. Short for demo, but I plan a Python script to automate more complex password combinations.
- **Future Idea**: Automate with Python to generate thousands of permutations, enhancing Hydra’s scope for SOC simulations.

## User Setup Details
- **Windows User**: Added `portfolioproject:test123` via Control Panel, ensuring SSH compatibility. Weak password mimics real-world misconfigurations SOC analysts target.
- **Verification**: Tested `ssh portfolioproject@192.168.20.10`—logged in successfully, confirming setup.

## Hydra Attack Analysis
- **Command**: `hydra -l portfolioproject -P wordlist.txt 192.168.20.10 ssh` cracked `portfolioproject:test123` instantly due to the small wordlist.
- **Performance**: Added `-t 4` to limit threads if slow; no issues here, but useful for SOC labs on larger networks.
- **Reflection**: Demonstrates brute-force risk—critical for SOC detection/mitigation training.

## Verification & Documentation Notes
- **SSH Confirmation**: `ssh portfolioproject@192.168.20.10` with `test123` and `whoami` verified access.
- **Mitigation**: Recommended strong passwords (e.g., 12+ chars, mixed types) and login limits (e.g., `fail2ban`) for SOC hardening.

## Outcome & Reflection
- **Success**: Proved weak credentials are exploitable, showcasing SOC threat assessment skills.
- **Learning**: Gained Linux terminal proficiency, virtual environment setup, and Red Team strategy insights. I’d automate wordlists and test larger networks for practical SOC scenarios.

## Troubleshooting Log
- **IP Conflict**: Both VMs initially shared `192.168.20.10`—fixed by static IP assignment.
- **SSH Issue**: “No route to host” resolved by verifying network, firewall, and SSH service status.

---

## Skills Reinforced
- Network isolation, Linux/Windows admin, vulnerability assessment, Hydra/Nmap usage, ethical hacking documentation.